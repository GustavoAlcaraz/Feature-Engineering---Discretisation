     Discretisation

Discretisation is the process of transforming continuous variables into discrete variables by creating a set of contiguous 
intervals that span the range of the variable's values. Discretisation is also called **binning**, where bin is an alternative name for interval.


Discretisation helps handle outliers and may improve value spread in skewed variables

Discretisation helps handle outliers by placing these values into the lower or higher intervals, together with the remaining inlier 
values of the distribution. Thus, these outlier observations no longer differ from the rest of the values at the tails of the distribution, 
as they are now all together in the same interval / bucket. In addition, by creating appropriate bins or intervals, discretisation 
can help spread the values of a skewed variable across a set of bins with equal number of observations.


Discretisation approaches

There are several approaches to transform continuous variables into discrete ones. Discretisation methods fall into 2 categories: 
**supervised and unsupervised**. Unsupervised methods do not use any information, other than the variable distribution, to create 
the contiguous bins in which the values will be placed. Supervised methods typically use target information in order to create the bins or intervals.


Unsupervised discretisation methods

- Equal width discretisation
- Equal frequency discretisation
- K-means discretisation

Supervised discretisation methods

- Discretisation using decision trees


In this lecture, I will describe **equal frequency discretisation**.


Equal frequency discretisation

Equal frequency discretisation divides the scope of possible values of the variable into N bins, where each bin carries the 
same amount of observations. This is particularly useful for skewed variables as it spreads the observations over the different bins equally. 
We find the interval boundaries by determining the quantiles.

Equal frequency discretisation using quantiles consists of dividing the continuous variable into N quantiles, N to be defined by the user.

Equal frequency binning is straightforward to implement and by spreading the values of the observations more evenly it may help boost the 
algorithm's performance. This arbitrary binning may also disrupt the relationship with the target.

## In this demo

We will learn how to perform equal frequency discretisation using:

- pandas and NumPy
- Feature-engine
- Scikit-learn